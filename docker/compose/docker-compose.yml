version: '3.9'

networks:
  tg-net:
   driver:
    bridge

services:
### Redis
  redis:
    image: redis:alpine
    restart: always
    networks:
    - tg-net
    ports:
    - "6379:6379"
    volumes:
      - ./data/redis:/data

### RabbitMq
  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: always
    networks:
      - tg-net
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq
    environment:
       RABBITMQ_DEFAULT_USER: ${RabbitMqConnectionsDefaultUserName}
       RABBITMQ_DEFAULT_PASS: ${RabbitMqConnectionsDefaultPassword}

 ### MongoDb
  mongodb:
    image: mongo:latest
    restart: always
    networks:
      - tg-net
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo/:/data
    #environment:
    #  MONGO_INITDB_ROOT_USERNAME: admin
    #  MONGO_INITDB_ROOT_PASSWORD: admin

 ### Minio
  minio:
    image: minio/minio:latest
    restart: always
    networks:
      - tg-net
    expose:
      - "9000"
      - "9001"
    ports:
      - 9000:9000
      - 9001:9001
    environment: 
      MINIO_ROOT_USER: ${MinioAccessKey} 
      MINIO_ROOT_PASSWORD: ${MinioSecretKey}
    volumes:
      - ./data/minio:/data
      #- /docker/minio/config:/root/./minio/
    command: server /data  --console-address ":9001"
    #privileged: true

################### MyTelegram server

  ### 1.Gateway server
  gateway-server:
    image: mytelegram/mytelegram-gateway-server:${MyTelegramVersion}
    restart: always
    networks:
      - tg-net
    ports:
      - "${Servers0Port}:20443"
      - "${Servers1Port}:30443"
      - "${Servers2Port}:30444"
    volumes:
      - ./data/mytelegram/gateway/logs:/data/Logs
    environment:
       ConnectionStrings__Default: ${DefaultConnectionStrings}
       RabbitMQ__Connections__Default__HostName: ${RabbitMqConnectionsDefaultHostName}
       RabbitMQ__Connections__Default__Port: ${RabbitMqConnectionsDefaultPort}
       RabbitMQ__Connections__Default__UserName: ${RabbitMqConnectionsDefaultUserName}
       RabbitMQ__Connections__Default__Password: ${RabbitMqConnectionsDefaultPassword}
       Redis__Configuration: ${RedsConfiguration}
       Serilog__MinimumLevel__Default: ${DefaultLogLevel}
       App__Servers__0__Enabled: ${Servers0Enabled}
       App__Servers__0__ServerType: ${Servers0ServerType}
       App__Servers__0__Ip: ${Servers0Ip}
       App__Servers__0__Port: ${Servers0Port}
       App__Servers__1__Enabled: ${Servers1Enabled}
       App__Servers__1__ServerType: ${Servers1ServerType}
       App__Servers__1__Ip: ${Servers1Ip}
       App__Servers__1__Port: ${Servers1Port}
       App__Servers__1__CertPemFilePath: ${Servers1CertPemFilePath}
       App__Servers__1__KeyPemFilePath: ${Servers1KeyPemFilePath}
       App__Servers__2__Enabled: ${Servers2Enabled}
       App__Servers__2__ServerType: ${Servers2ServerType}
       App__Servers__2__Ip: ${Servers2Ip}
       App__Servers__2__Port: ${Servers2Port}
    depends_on:
      - rabbitmq
      - mongodb
      - redis

  ### 2.Seq server
  seq-server:
    image: mytelegram/mytelegram-seq-server:latest
    restart: always
    networks:
      - tg-net
    #ports:
    #  - "10001:80"
    environment:
      ConnectionStrings__Default: ${DefaultConnectionStrings}
      Serilog__MinimumLevel__Default: ${DefaultLogLevel}
    volumes:
      - ./data/mytelegram/seq/logs:/data/Logs
    depends_on:
      - mongodb

  ### 3.Auth server
  auth-server:
    image: mytelegram/mytelegram-auth-server:${MyTelegramVersion}
    restart: always
    networks:
      - tg-net
    environment:
       ConnectionStrings__Default: ${DefaultConnectionStrings}
       RabbitMQ__Connections__Default__HostName: ${RabbitMqConnectionsDefaultHostName}
       RabbitMQ__Connections__Default__Port: ${RabbitMqConnectionsDefaultPort}
       RabbitMQ__Connections__Default__UserName: ${RabbitMqConnectionsDefaultUserName}
       RabbitMQ__Connections__Default__Password: ${RabbitMqConnectionsDefaultPassword}
       Redis__Configuration: ${RedsConfiguration}
       Serilog__MinimumLevel__Default: ${DefaultLogLevel}
    volumes:
      - ./data/mytelegram/auth/logs:/data/Logs
    depends_on:
      - mongodb
      - rabbitmq
      - redis

  ### 4.Session server
  session-server:
    image: mytelegram/mytelegram-session-server:${MyTelegramVersion}
    restart: always
    networks:
      - tg-net
    environment:
       ConnectionStrings__Default: ${DefaultConnectionStrings}
       RabbitMQ__Connections__Default__HostName: ${RabbitMqConnectionsDefaultHostName}
       RabbitMQ__Connections__Default__Port: ${RabbitMqConnectionsDefaultPort}
       RabbitMQ__Connections__Default__UserName: ${RabbitMqConnectionsDefaultUserName}
       RabbitMQ__Connections__Default__Password: ${RabbitMqConnectionsDefaultPassword}
       Redis__Configuration: ${RedsConfiguration}
       App__MessengerServerGrpcServiceUrl: ${MessengerServerGrpcServiceUrl}
       App__IdGeneratorGrpcServiceUrl: ${IdGeneratorGrpcServiceUrl}
       App__DatabaseName: ${DatabaseName}
       Serilog__MinimumLevel__Default: ${DefaultLogLevel}
    volumes:
      - ./data/mytelegram/session/logs:/data/Logs
    depends_on:
      - mongodb
      - rabbitmq
      - redis

  ### 5.Messenger grpc server
  messenger-grpc-server:
    image: mytelegram/mytelegram-messenger-grpc-service:${MyTelegramVersion}
    restart: always
    networks:
      - tg-net
    #ports:
    #  - "10002:80"
    environment:
       ConnectionStrings__Default: ${DefaultConnectionStrings}
       Serilog__MinimumLevel__Default: ${DefaultLogLevel}
       App__DatabaseName: ${DatabaseName}
    volumes:
      - ./data/mytelegram/messenger-grpc/logs:/data/Logs
    depends_on:
      - mongodb

  ### 6.File server
  file-server:
    image: mytelegram/mytelegram-file-server:${MyTelegramVersion}
    restart: always
    networks:
      - tg-net
    #ports:
    #  - "10003:80"
    volumes:
      - ./data/uploads:/app/uploads
      - ./data/mytelegram/file:/app/Logs
    environment:
       ConnectionStrings__Default: ${DefaultConnectionStrings} 
       RabbitMQ__Connections__Default__HostName: ${RabbitMqConnectionsDefaultHostName}
       RabbitMQ__Connections__Default__Port: ${RabbitMqConnectionsDefaultPort}
       RabbitMQ__Connections__Default__UserName: ${RabbitMqConnectionsDefaultUserName}
       RabbitMQ__Connections__Default__Password: ${RabbitMqConnectionsDefaultPassword}
       App__DcOptions__0__IpAddress: ${DcOptions0IpAddress}
       App__DcOptions__0__Port: ${DcOptions0Port}
       App__DcOptions__0__Ipv6: ${DcOptions0Ipv6}
       App__DatabaseName: ${DatabaseName}
       Serilog__MinimumLevel__Default: ${DefaultLogLevel}
       Minio__Endpoint: ${MinioEndpoint}
       Minio__AccessKey: ${MinioAccessKey}
       Minio__SecretKey: ${MinioSecretKey}
       Minio__BucketName: ${MinioBucketName}
       Minio__CreateBucketIfNotExists: ${MinioCreateBucketIfNotExists}
    depends_on:
      - mongodb
      - rabbitmq

  ### 7.Messenger command server
  messenger-command-server:
    image: mytelegram/mytelegram-messenger-command-server:${MyTelegramVersion}
    restart: always
    networks:
      - tg-net
    environment:
       ConnectionStrings__Default: ${DefaultConnectionStrings} 
       RabbitMQ__Connections__Default__HostName: ${RabbitMqConnectionsDefaultHostName}
       RabbitMQ__Connections__Default__Port: ${RabbitMqConnectionsDefaultPort}
       RabbitMQ__Connections__Default__UserName: ${RabbitMqConnectionsDefaultUserName}
       RabbitMQ__Connections__Default__Password: ${RabbitMqConnectionsDefaultPassword}
       Redis__Configuration: ${RedsConfiguration}
       App__FileServerGrpcServiceUrl: ${FileServerGrpcServiceUrl}
       App__IdGeneratorGrpcServiceUrl: ${IdGeneratorGrpcServiceUrl}
       App__DcOptions__0__IpAddress: ${DcOptions0IpAddress}
       App__DcOptions__0__Port: ${DcOptions0Port}
       App__DcOptions__0__Ipv6: ${DcOptions0Ipv6}
       App__DcOptions__1__IpAddress: ${DcOptions1IpAddress}
       App__DcOptions__1__Port: ${DcOptions1Port}
       App__DcOptions__1__Ipv6: ${DcOptions1Ipv6}
       App__FixedVerifyCode: ${FixedVerifyCode}
       App__DatabaseName: ${DatabaseName}
       App__QueryServerEventStoreDatabaseName: ${QueryServerEventStoreDatabaseName}
       App__QueryServerReadModelDatabaseName: ${QueryServerReadModelDatabaseName}
       Serilog__MinimumLevel__Default: ${DefaultLogLevel}
    volumes:
      - ./data/mytelegram/messenger-command-server/logs:/data/Logs
    depends_on:
      - mongodb
      - rabbitmq
      - redis

  ### 7.Messenger query server
  messenger-query-server:
    image: mytelegram/mytelegram-messenger-query-server:${MyTelegramVersion}
    restart: always
    networks:
      - tg-net
    environment:
       ConnectionStrings__Default: ${DefaultConnectionStrings} 
       RabbitMQ__Connections__Default__HostName: ${RabbitMqConnectionsDefaultHostName}
       RabbitMQ__Connections__Default__Port: ${RabbitMqConnectionsDefaultPort}
       RabbitMQ__Connections__Default__UserName: ${RabbitMqConnectionsDefaultUserName}
       RabbitMQ__Connections__Default__Password: ${RabbitMqConnectionsDefaultPassword}
       Redis__Configuration: ${RedsConfiguration}
       App__FileServerGrpcServiceUrl: ${FileServerGrpcServiceUrl}
       App__IdGeneratorGrpcServiceUrl: ${IdGeneratorGrpcServiceUrl}
       App__DcOptions__0__IpAddress: ${DcOptions0IpAddress}
       App__DcOptions__0__Port: ${DcOptions0Port}
       App__DcOptions__0__Ipv6: ${DcOptions0Ipv6}
       App__DcOptions__1__IpAddress: ${DcOptions1IpAddress}
       App__DcOptions__1__Port: ${DcOptions1Port}
       App__DcOptions__1__Ipv6: ${DcOptions1Ipv6}
       App__FixedVerifyCode: ${FixedVerifyCode}
       App__DatabaseName: ${DatabaseName}
       App__QueryServerEventStoreDatabaseName: ${QueryServerEventStoreDatabaseName}
       App__QueryServerReadModelDatabaseName: ${QueryServerReadModelDatabaseName}
       Serilog__MinimumLevel__Default: ${DefaultLogLevel}
    volumes:
      - ./data/mytelegram/messenger-query-server/logs:/data/Logs
    depends_on:
      - mongodb
      - rabbitmq
      - redis

### 8.Sms sender
  sms-sender:
    image: mytelegram/mytelegram-sms-sender:${MyTelegramVersion}
    restart: always
    networks:
      - tg-net
    environment:
      RabbitMQ__Connections__Default__HostName: ${RabbitMqConnectionsDefaultHostName}
      RabbitMQ__Connections__Default__Port: ${RabbitMqConnectionsDefaultPort}
      RabbitMQ__Connections__Default__UserName: ${RabbitMqConnectionsDefaultUserName}
      RabbitMQ__Connections__Default__Password: ${RabbitMqConnectionsDefaultPassword}
      TwilioSms__Enabled: ${TwilioSmsEnabled}
      TwilioSms__AccountSId: ${TwilioSmsAccountSId}
      TwilioSms__AuthToken: ${TwilioSmsAuthToken}
      TwilioSms__FromNumber: ${TwilioSmsFromNumber}
    volumes:
      - ./data/mytelegram/sms-sender/logs:/data/Logs
    depends_on:
      - rabbitmq